server:
  port: 8082

spring:
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://localhost:9411
#  Database Properties
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/order_service_db
    username: postgres
    password: root
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop
  application:
    name: order-service

#  Kafka Properties
  kafka:
    producer:
      bootstrap-servers:
        - localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        "[spring.json.type.mapping]": event:uz.abbos.event.OrderPlacedEvent
    template:
      default-topic: notificationTopic
management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always


#      Resilience4j properties
resilience4j:
  circuit-breaker:
    instances:
      inventory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
#       THIS CONFIG FOUNDED BY COUNT
        sliding-window-type: COUNT_BASED # TIME_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
#       this config ignored previous config even if the request thresholds reach up to 50%, wait until the end of the minimum call
#        minimum-number-of-calls: 10
        wait-duration-in-open-state: 5s
        automatic-transition-from-open-to-half-open-enabled: true
#        for check if other replicas are running,therefore it is desirable to insert a replica number
#        this config you can see on half open state in buffer-size parameter
        permitted-number-of-calls-in-half-open-state: 3
#       this config don't worked with  permitted-in-half-open-state config this is an alternative to place counter,seconds
        exponential-max-wait-duration-in-open-state: 5s

#       Resilience4j Retry properties
  retry:
    instances:
      inventory:
        enable-exponential-backoff: true
        max-attempts: 5
        wait-duration: 5s
  time-limiter:
    instances:
      inventory:
        timeout-duration: 5s
eureka:
  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka
