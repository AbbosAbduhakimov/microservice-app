<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="064eef11-f301-4a21-bf8c-e6a058e46433" name="Changes" comment="fix docker-compose.yml file">
      <change afterPath="$PROJECT_DIR$/.idea/sqldialects.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/discovery-server/src/main/java/uz/abbos/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3ea06869-6b8d-4793-9c7e-8a6575b67780/storage_v2/_src_/database/inver_service_db.yVQ0ng.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3ea06869-6b8d-4793-9c7e-8a6575b67780/storage_v2/_src_/database/inver_service_db.yVQ0ng/schema/information_schema.FNRwLQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3ea06869-6b8d-4793-9c7e-8a6575b67780/storage_v2/_src_/database/inver_service_db.yVQ0ng/schema/pg_catalog.0S1ZNQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/3ea06869-6b8d-4793-9c7e-8a6575b67780/storage_v2/_src_/database/inver_service_db.yVQ0ng/schema/public.abK9xQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/71714076-8cde-441f-b086-e56036169aa9/storage_v2/_src_/database/order_service_db.2QN1bQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/71714076-8cde-441f-b086-e56036169aa9/storage_v2/_src_/database/order_service_db.2QN1bQ/schema/information_schema.FNRwLQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/71714076-8cde-441f-b086-e56036169aa9/storage_v2/_src_/database/order_service_db.2QN1bQ/schema/pg_catalog.0S1ZNQ.meta" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/src/main/java/uz/abbos/ApiGatewayApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/src/main/java/uz/abbos/ApiGatewayApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/src/main/resources/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/src/main/java/uz/abbos/DiscoveryServerApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/src/main/java/uz/abbos/DiscoveryServerApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/discovery-server/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/discovery-server/src/main/resources/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory-service/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/inventory-service/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory-service/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/inventory-service/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory-service/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/inventory-service/src/main/resources/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/inventory-service/src/main/resources/data.sql" beforeDir="false" afterPath="$PROJECT_DIR$/inventory-service/src/main/resources/data.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/notification-service/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/notification-service/src/main/resources/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/src/main/resources/application.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/order-service/src/main/resources/data.sql" beforeDir="false" afterPath="$PROJECT_DIR$/order-service/src/main/resources/data.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/Dockerfile-layered" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/Dockerfile-layered" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/resources/application-docker.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/resources/application-docker.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/product-service/src/main/resources/application.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/product-service/src/main/resources/application.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2IGXO4W7goUkGEw1idvXg9t1pW4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "jdk.selected.JAVA_MODULE": "1.8 (3)",
    "last_opened_file_path": "C:/Users/USER/IdeaProjects/microservice-app/product-service",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "run.code.analysis.last.selected.profile": "pProject Default",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "spring.configuration.checksum": "e9397b1563c417628e8833f4ff2ac10b",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "mongo",
      "postgresql"
    ]
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\USER\IdeaProjects\microservice-app\product-service" />
      <recent name="C:\Users\USER\IdeaProjects\microservice-app\order-service" />
      <recent name="C:\Users\USER\IdeaProjects\microservice-app\inventory-service" />
      <recent name="C:\Users\USER\IdeaProjects\microservice-app\discovery-server" />
      <recent name="C:\Users\USER\IdeaProjects\microservice-app\notification-service" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.order-service: Compose Deployment">
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DiscoveryServerApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="discovery-server" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.DiscoveryServerApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="ACTIVE_PROFILES" />
      <module name="inventory-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.InventoryServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="uz.abbos.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="InventoryServiceApplication (2)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <option name="ACTIVE_PROFILES" />
      <module name="inventory-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.InventoryServiceApplication" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="uz.abbos.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NotificationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="notification-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.NotificationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrderServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="order-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.OrderServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="product-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="uz.abbos.ProductServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.inventory-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="inventory-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.order-service: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="order-service" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres-inventory: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres-inventory" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres-keycloak: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres-keycloak" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.postgres-order: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="postgres-order" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.inventory-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.postgres-inventory: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.postgres-keycloak: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.postgres-order: Compose Deployment" />
      <item itemvalue="Spring Boot.ApiGatewayApplication" />
      <item itemvalue="Spring Boot.DiscoveryServerApplication" />
      <item itemvalue="Spring Boot.ProductServiceApplication" />
      <item itemvalue="Spring Boot.InventoryServiceApplication (2)" />
      <item itemvalue="Spring Boot.InventoryServiceApplication (1)" />
      <item itemvalue="Spring Boot.NotificationServiceApplication" />
      <item itemvalue="Spring Boot.OrderServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.order-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.inventory-service: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.postgres-order: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.postgres-inventory: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.postgres-keycloak: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringBeansView">
    <option name="beanDetailsProportion" value="0.3" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="064eef11-f301-4a21-bf8c-e6a058e46433" name="Changes" comment="" />
      <created>1669808860536</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669808860536</updated>
      <workItem from="1669808861807" duration="4855000" />
      <workItem from="1669871030764" duration="11090000" />
      <workItem from="1669883280838" duration="361000" />
      <workItem from="1669883800257" duration="14688000" />
      <workItem from="1670305860362" duration="50287000" />
      <workItem from="1670416361069" duration="8310000" />
      <workItem from="1670560024129" duration="7478000" />
      <workItem from="1670568568728" duration="4291000" />
      <workItem from="1670581996013" duration="6818000" />
      <workItem from="1670589329451" duration="7963000" />
      <workItem from="1670996229750" duration="395000" />
      <workItem from="1670996772845" duration="11921000" />
      <workItem from="1671011179174" duration="15909000" />
    </task>
    <task id="LOCAL-00001" summary="add zipkin and Kafka">
      <created>1670335512499</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1670335512499</updated>
    </task>
    <task id="LOCAL-00002" summary="configured NotificationServiceApplication">
      <created>1670396415134</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1670396415134</updated>
    </task>
    <task id="LOCAL-00003" summary="add docker files for dockerize the application">
      <created>1670423226403</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1670423226403</updated>
    </task>
    <task id="LOCAL-00004" summary="fix docker-compose.yml file">
      <created>1670597496825</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1670597496825</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="add zipkin and Kafka" />
    <MESSAGE value="configured NotificationServiceApplication" />
    <MESSAGE value="add docker files for dockerize the application" />
    <MESSAGE value="fix docker-compose.yml file" />
    <option name="LAST_COMMIT_MESSAGE" value="fix docker-compose.yml file" />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="org.apache.kafka.clients.consumer.ConsumerRecord" memberName="serializedKeySize" />
        <PinnedItemInfo parentTag="org.apache.kafka.clients.consumer.ConsumerRecord" memberName="offset" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>